proxy_cache_path /var/cache levels=1:2 keys_zone=my_cache:10m max_size=250m inactive=1200m use_temp_path=off;

# HTTPS
server {
  server_name yourwebsite.com;
  listen 443 ssl http2;
  ssl_certificate /etc/letsencrypt/live/yourwebsite.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/yourwebsite.com/privkey.pem; # managed by Certbot
  # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  location / {
    allow all;
    include /etc/nginx/include/frontend.conf;
  }

  location /public {
    proxy_cache my_cache;
    add_header X-Cache-Status $upstream_cache_status;
    root /var/www;
    try_files $uri $uri/ =404;
  }

  # ghost
  location ~ ^/(blog/ghost$|blog/ghost/|blog/content) {
    include /etc/nginx/include/ghost_admin.conf;
  }

}

# HTTP -> HTTPS
server {
  server_name yourwebsite.com;
  listen 80;
  listen [::]:80;

  return 301 https://$host$request_uri;
}

# HTTP NON WWW -> WWW
server {
  server_name www.yourwebsite.com;
  listen 80;
  listen [::]:80;

  return 301 https://yourwebsite.com$request_uri;
}

# HTTPS NON WWW -> WWW
server {
  server_name www.yourwebsite.com;
  listen 443 ssl http2; # managed by Certbot

  ssl_certificate /etc/letsencrypt/live/yourwebsite.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/yourwebsite.com/privkey.pem; # managed by Certbot
  # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  return 301 https://yourwebsite.com$request_uri;
}